/*
 * This program runs a rock paper scissors, wherein the user
 * plays a game of rock paper scissors against the computer.
 *
 * @author  Jenoe Balote
 * @version 1.0
 * @since   2021-12-02
 */

import java.io.IOException;
import java.util.Random;
import java.util.Scanner;

/**
 * This class gets the user to play rock paper scissors against the computer.
 */
final class Rps {

    /**
    * Prevents instantiation.
    * Throw an exception IllegalStateException when called.
    *
    * @throws IllegalStateException
    *
    */
    private Rps() {
        throw new IllegalStateException("Cannot be instantiated");
    }

    /**
     * Generates the choice of the computer.
     *
     * @return This function returns the choice of the computer.
     */
    private static String cpuMove() {

        // Variables
        final String rock = "rock";
        final String paper = "paper";
        final String scissors = "scissors";

        // Generates a random number between 1 and 3
        final Scanner scan = new Scanner(System.in);
        final Random generator = new Random();

        final int cpuInt = generator.nextInt(3) + 1;
        String cpuMove = "";

        // Converts random choice from integer to string
        if (cpuInt == 1) {
            cpuMove = rock;
        } else if (cpuInt == 2) {
            cpuMove = paper;
        } else {
            cpuMove = scissors;
        }

        return cpuMove;
    }

    /**
     * Determines the winner of the game.
     *
     * @param usrMove is the move inputted by the user.
     * @param cpuMove is the move generated by the computer.
     *
     * @return returns the result of the game.
     */
    private static String gameWinner(
            final String usrMove, final String cpuMove) {

        // Variables
        final String rock = "rock";
        final String paper = "paper";
        final String scissors = "scissors";

        final String gameWinner;

        if (usrMove.equals(cpuMove)) {
            gameWinner = "It's a tie.";
        } else if (rock.equals(usrMove) && scissors.equals(cpuMove)
                    || scissors.equals(usrMove) && paper.equals(cpuMove)
                    || paper.equals(usrMove) && rock.equals(cpuMove)) {
            gameWinner = "You win! Good job!";
        } else {
            gameWinner = "You lose... yikes.";
        }
        return gameWinner;
    }

    /**
     * Gathers user input then outputs whether or not they won the
     * game or not.
     *
     * @param args No args will be used.
     * @throws IOException if there is anything wrong with input.
     *
     */
    public static void main(final String[] args) {

        // Variables
        final String rock = "rock";
        final String paper = "paper";
        final String scissors = "scissors";

        final String cpuMove;
        final String gameWinner;

        System.out.println("This is the Rock, Paper, Scissors program.");
        System.out.println();

        try {
            // Input
            final Scanner in = new Scanner(System.in);
            System.out.print("Choose your move (rock,paper, scissors): ");
            final String usrMove = in.nextLine();

            switch (usrMove) {
                case rock: break;
                case paper: break;
                case scissors: break;
                default: throw new IOException();
            }

            // Generated choice from computer
            cpuMove = cpuMove();
            System.out.println("The Computer chose: " + cpuMove);

            // Output
            gameWinner = gameWinner(usrMove, cpuMove);
            System.out.println(gameWinner);
        } catch (IOException exception) {
            // Error Check
            System.out.println("Invalid input.");
        }

        System.out.println("\nDone.");
    }

}
